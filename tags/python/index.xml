<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Lenon Oliveira</title>
    <link>https://lenon.dev/tags/python/</link>
    <description>Recent content in Python on Lenon Oliveira</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2024, Lenon Oliveira.</copyright>
    <lastBuildDate>Sun, 05 Jun 2022 15:00:00 +0000</lastBuildDate>
    <atom:link href="https://lenon.dev/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python code linters and analyzers</title>
      <link>https://lenon.dev/blog/python-code-linters-and-analyzers/</link>
      <pubDate>Sun, 05 Jun 2022 15:00:00 +0000</pubDate>
      <guid>https://lenon.dev/blog/python-code-linters-and-analyzers/</guid>
      <description>Code linters are great for finding errors, bugs, and code smells before they reach production. They help keep the code base readable, maintainable, and consistent. Some linters are focused only on code style, while others can offer more in-depth refactoring suggestions.&#xA;In this post, I made a small list to compare some of the available code linters for Python because a lot has changed since the last time I checked them.</description>
    </item>
    <item>
      <title>Downloading and caching large files using Python</title>
      <link>https://lenon.dev/blog/downloading-and-caching-large-files-using-python/</link>
      <pubDate>Mon, 24 May 2021 22:00:00 +0000</pubDate>
      <guid>https://lenon.dev/blog/downloading-and-caching-large-files-using-python/</guid>
      <description>While writing a small Python library to download and parse a large CSV file from the web, I had to implement a strategy to cache the file locally and avoid downloading it on every execution. I wanted the library to download the file only once on the first execution and also when it has changed on the server. In this blog post I&amp;rsquo;m describing how to implement this with Python, basic HTTP headers and file manipulation.</description>
    </item>
  </channel>
</rss>
