<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Http on Lenon Oliveira</title>
    <link>https://lenon.dev/tags/http/</link>
    <description>Recent content in Http on Lenon Oliveira</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2024, Lenon Oliveira.</copyright>
    <lastBuildDate>Mon, 24 May 2021 22:00:00 +0000</lastBuildDate>
    <atom:link href="https://lenon.dev/tags/http/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Downloading and caching large files using Python</title>
      <link>https://lenon.dev/blog/downloading-and-caching-large-files-using-python/</link>
      <pubDate>Mon, 24 May 2021 22:00:00 +0000</pubDate>
      <guid>https://lenon.dev/blog/downloading-and-caching-large-files-using-python/</guid>
      <description>&lt;p&gt;While writing a small Python library to download and parse a large CSV file from&#xA;the web, I had to implement a strategy to cache the file locally and avoid&#xA;downloading it on every execution. I wanted the library to download the file&#xA;only once on the first execution and also when it has changed on the server. In&#xA;this blog post I&amp;rsquo;m describing how to implement this with Python, basic HTTP&#xA;headers and file manipulation.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
